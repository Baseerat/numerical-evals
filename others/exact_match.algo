def exact_match (
    leafs,
    leafs_to_rules_map,
    max_rules_per_leaf,
    max_bitmaps,
    max_leafs_per_bitmap )

    leaf_count = len(leafs)

    if leaf_count <= max_bitmaps:
        return

    bitmaps_to_leafs_map = a dict having bitmap to leafs mapping

    ordered_bitmaps_to_leafs_map = sorted bitmap to leafs mapping in descending order of number of leafs per bitmap
                                   (i.e., a bitmap having more leafs comes first)

    bitmap_count = 0

    leafs_per_bitmap_count = 0

    default_bitmap = 0

    for bitmap in ordered_bitmaps_to_leafs_map:

        for leaf in ordered_bitmaps_to_leafs_map[bitmap]:

            if bitmap_count < max_bitmaps:

                leaf['has_bitmap'] = True

                leafs_per_bitmap_count += 1

                if leafs_per_bitmap_count == max_leafs_per_bitmap:

                    bitmap_count += 1

                    leafs_per_bitmap_count = 0

            else:

                if leafs_to_rules_map[leaf] < max_rules_per_leaf:

                    leaf['has_rule'] = True

                    leafs_to_rules_map[leaf] += 1

                else:

                    default_bitmap |= leaf['bitmap']

        if bitmap_count < max_bitmaps and leafs_per_bitmap_count > 0:

            bitmap_count += 1

            leafs_per_bitmap_count = 0

    for leaf in leafs:

        if ('has_bitmap' and 'has_rule') not in leaf:

            leaf['~bitmap'] = default_bitmap ^ leaf['bitmap']

    return leafs, leafs_to_rules_map, default_bitmap